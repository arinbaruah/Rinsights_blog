{
  "hash": "c5ebd670aec8533b0adeba99d60387f6",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Observing variations of LGBTQ+ movies scores across languages\"\nauthor: \"Arindam Baruah\"\ndate: \"2024-07-14\"\ncategories: [R,data cleaning,exploratory data analysis,plot aesthetics, ggplot2]\nquarto-required: \">=1.3.0\"\nformat:\n    html:\n        output-file: post.html\nexecute: \n  echo: true\n  message: false\n  warning: false\nnumber-sections: true\n---\n\n\n# Introduction\n\nThis week's [TidyTuesday](https://github.com/rfordatascience/tidytuesday/blob/master/README.md) dataset dealt with LGBTQ+ movie data released across the globe and the interesting information that we can extract out of it. üè≥Ô∏è‚Äçüåàüè≥Ô∏è‚Äçüåà\n\nMore details on this dataset [here](https://github.com/rfordatascience/tidytuesday/blob/master/data/2024/2024-06-25/readme.md) üëà\n\n# Methodology\n\nThe source of the data and the code used to obtain @fig-plot is delineated through @sec-source to @sec-viz.\n\n## Sourcing the data {#sec-source}\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nlgbtq_movies <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2024/2024-06-25/lgbtq_movies.csv')\n```\n:::\n\n\n\n## Setting the aesthetic theme\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nlibrary(tidyverse)\nlibrary(glue)\nlibrary(ggrepel)\nlibrary(ggplot2)\nlibrary(ggtext)\nlibrary(sysfonts)\nlibrary(showtext)\nlibrary(ggridges)\n\n\n# caption handles\nswd <- str_glue(\"#SWDchallenge: June 2024 &bull; Source: Synthetic data from ChatGPT<br>\")  \nli <- str_glue(\"<span style='font-family:fa6-brands'>&#xf08c;</span>\")  \ngh <- str_glue(\"<span style='font-family:fa6-brands'>&#xf09b;</span>\")\nmn <- str_glue(\"<span style='font-family:fa6-brands'>&#xf4f6;</span>\")\n\n\n# plot colors\nbkg_col      <- colorspace::lighten(\"#f2f5e5\", 0.05)    \ntitle_col    <- \"#3d3d3d\"           \nsubtitle_col <- \"#3d3d3d\"     \ncaption_col  <- \"#72647D\"   \ntext_col     <- colorspace::darken(\"gray40\" , 0.2)  \n\n# fonts\n\nfont_add('fa6-brands','fontawesome/otfs/Font Awesome 6 Brands-Regular-400.otf') \nfont_add_google(\"Oswald\", regular.wt = 400, family = \"title\")                 \nfont_add_google(\"Quattrocento Sans\", regular.wt = 400, family = \"subtitle\")  \nfont_add_google(\"Quattrocento Sans\", regular.wt = 400, family = \"text\")        \nfont_add_google(\"Merriweather\", regular.wt = 400,family = \"caption\")\nshowtext_auto(enable = TRUE)  \n\n\nX_icon <- glue(\"<span style='font-family:fa6-brands'>&#xe61b;</span>\")\n\ncaption_text <- str_glue(\"{li} Arindam Baruah | {X_icon} @wizsights | {gh} arinbaruah | Source: TidyTuesday |#rstudio #ggplot2\")\n\ntheme_set(theme_minimal(base_size = 15, base_family = \"text\"))                \n\n# Theme updates\n\ntheme_update(\n  plot.title.position   = \"plot\",\n  plot.caption.position = \"plot\",\n  legend.position       = 'plot',\n  plot.margin           = margin(t = 10, r = 15, b = 0, l = 15),\n  plot.background       = element_rect(fill = bkg_col, color = bkg_col),\n  panel.background      = element_rect(fill = bkg_col, color = bkg_col),\n  axis.title.x          = element_text(margin = margin(10, 0, 0, 0), size = rel(1), color = text_col, family = 'text', face = 'bold'),\n  axis.title.y          = element_text(margin = margin(0, 10, 0, 0), size = rel(1), color = text_col, family = 'text', face = 'bold'),\n  axis.text             = element_text(size = 10, color = text_col, family = 'text',face = \"bold\"),\n  panel.grid.minor.y    = element_blank(),\n  panel.grid.major.y    = element_line(linetype = \"dotted\", linewidth = 0.1, color = 'gray40'),\n  panel.grid.minor.x    = element_blank(),\n  panel.grid.major.x    = element_blank(),\n  axis.line.x           = element_line(color = \"#d7d7d8\", linewidth = .2),\n)\n```\n:::\n\n\n## Data wrangling\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\ntop_langs <- lgbtq_movies %>% group_by(original_language) %>% \n  summarise(Total = n()) %>% arrange(-Total) %>% head(6)  # Top 6 most released movies by language\n\nlgbtq_movies <- lgbtq_movies %>% filter(original_language %in% top_langs$original_language)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nlgbtq_movies <- lgbtq_movies %>% mutate(original_lang = case_when(original_language == \"en\" ~ \"English\",\n                                                  original_language == \"pt\" ~ \"Portugese\",\n                                                  original_language == \"ja\" ~ \"Japanese\",\n                                                  original_language == \"fr\" ~ \"French\",\n                                                  original_language == \"es\" ~ \"Spanish\",\n                                                  original_language == \"de\" ~ \"German\",\n                                                  .default = original_language))\n```\n:::\n\n\n\n\n## Data Visualisation {#sec-viz}\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nlgbtq_colors <- c(\"#FF0018\", \"#FFA52C\", \"#FFFF41\", \"#008018\", \"#0000F9\", \"#86007D\", \"#8B4513\", \"#FFD700\")\n\ntitle_text <- \"Average vote score distribution by language in LGBTQ+ Movies\"\n\n\nsubtitle_text <- \"Visualizing the average vote scores across LGBTQ+ categorized movies based on their respective languages reveals <br> an intriguing pattern. The overall distribution of vote scores appears to be <strong><span style='color: darkred;'>bimodal</span></strong>, with noticeable peaks at scores <br> of 0 and 6. This suggests that viewers tend to either strongly dislike these movies or find them to be average. <br> Additionally, it's interesting to note that <strong> English-language </strong> movies exhibit a higher frequency of low scores compared <br> to movies in other languages. This may indicate differing audience preferences or varying production quality <br> across different language groups.\"\n\ncaption_text <- str_glue(\"{li} Arindam Baruah | {X_icon} @wizsights | {gh} arinbaruah | Source: TidyTuesday |#rstudio #ggplot2\")\n\npl <- lgbtq_movies %>% ggplot(aes(vote_average,original_lang)) + \n  geom_density_ridges(aes(fill = factor(original_lang)), color = \"grey30\", linewidth = .25, alpha = .9) +\n  scale_fill_manual(values = lgbtq_colors) +\n  geom_vline(xintercept = c(0,5,10), linewidth = .3, linetype = \"dotted\", lineend = \"round\",alpha = 0.5) +\n  labs(x = \"Average Vote Score\",\n       y=\"\",\n       title = title_text,\n       subtitle = subtitle_text,\n       caption = caption_text) +\n  theme(\n    \n     axis.text.x        = element_text(\n      size                = rel(1.5),\n      family              = \"text\",\n      face                = \"bold\",\n      color               = title_col,\n      lineheight          = 1.1,\n      margin              = margin(t = 5, b = 5),\n      hjust               = 0.5\n    ),\n    axis.text        = element_text(\n      size                = rel(1.8),\n      family              = \"text\",\n      face                = \"bold\",\n      color               = title_col,\n      lineheight          = 1.1,\n      margin              = margin(t = 5, b = 5),\n      hjust               = 0.5\n    ),\n    axis.title        = element_text(\n      size                = rel(1.5),\n      family              = \"text\",\n      face                = \"bold\",\n      color               = title_col,\n      lineheight          = 1.1,\n      margin              = margin(t = 5, b = 5),\n      hjust               = 0.5\n    ),\n    plot.title        = element_text(\n      size                = rel(4),\n      family              = \"title\",\n      face                = \"bold\",\n      color               = title_col,\n      lineheight          = 1.1,\n      margin              = margin(t = 5, b = 5),\n      hjust               = 0.5\n    ),\n    plot.subtitle         = element_markdown(\n      size                = rel(2), \n      family              = 'subtitle',\n      color               = subtitle_col,\n      hjust               = 0,\n      lineheight          = 0.4, \n      margin              = margin(t = 5, b = 1)\n    ),\n    plot.caption          = element_markdown(\n      size                = rel(1.5), \n      family              = 'caption',\n      color               = caption_col,\n      lineheight          = 0.6,\n      hjust               = 0.5,\n      halign              = 0,\n      margin              = margin(t = 10, b = 10)\n    )) \n```\n:::\n\n\n## Final visualisation\n\n![Average vote score distribution by language in LGBTQ+ Movies](lgbtq_density_plot.png){#fig-plot}\n\n@fig-plot illustrates the average vote scores of all the LGBTQ+ categorised movies across different languages. For the current analysis, languages containing at least 100 or greater number of movies were considered.\n\nSo what do we learn from this ? ü§îüïµüèª‚Äç‚ôÄÔ∏è\n\n:::{.callout-note}\n# Key takeaways\n\n - It is interesting to note how the average vote score was __bimodal across all languages.__ üßë‚Äçüíª\n - In general, English LGBTQ+ movies scored lower than others. ü§Ø \n \n:::\n\n# References\n\n1. __tidyverse__: Wickham H, Averick M, Bryan J, Chang W, McGowan LD, Fran√ßois R, Grolemund G, Hayes A, Henry L, Hester J, Kuhn M,\n  Pedersen TL, Miller E, Bache SM, M√ºller K, Ooms J, Robinson D, Seidel DP, Spinu V, Takahashi K, Vaughan D, Wilke C,\n  Woo K, Yutani H (2019). ‚ÄúWelcome to the tidyverse.‚Äù _Journal of Open Source Software_, *4*(43), 1686.\n  doi:10.21105/joss.01686 <https://doi.org/10.21105/joss.01686>.\n  \n2. __glue__: Hester J, Bryan J (2024). _glue: Interpreted String Literals_. R package version 1.7.0, <https://CRAN.R-project.org/package=glue>.\n\n3. __ggrepel__: Slowikowski K (2024). _ggrepel: Automatically Position Non-Overlapping Text Labels with 'ggplot2'_. R package version 0.9.5,\n  <https://CRAN.R-project.org/package=ggrepel>.\n4. __ggplot2__: H. Wickham. ggplot2: Elegant Graphics for Data Analysis. Springer-Verlag New York, 2016.\n\n5. __ggtext__: Wilke C, Wiernik B (2022). _ggtext: Improved Text Rendering Support for 'ggplot2'_. R package version 0.1.2,\n  <https://CRAN.R-project.org/package=ggtext>.\n6. __sysfonts__: Qiu Y, details. aotifSfAf (2024). _sysfonts: Loading Fonts into R_. R package version 0.8.9,\n  <https://CRAN.R-project.org/package=sysfonts>.\n7. __showtext__: Qiu Y, details. aotisSfAf (2024). _showtext: Using Fonts More Easily in R Graphs_. R package version 0.9-7,\n  <https://CRAN.R-project.org/package=showtext>.\n8. __ggridges__: Wilke C (2024). _ggridges: Ridgeline Plots in 'ggplot2'_. R package version 0.5.6, <https://CRAN.R-project.org/package=ggridges>.\n\n\n<script src=\"https://utteranc.es/client.js\"\n        repo=\"arinbaruah/Rinsights_blog\"\n        issue-term=\"url\"\n        theme=\"github-light\"\n        crossorigin=\"anonymous\"\n        async>\n</script>\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}