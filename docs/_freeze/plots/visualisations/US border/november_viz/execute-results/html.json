{
  "hash": "bbc09c7c532b25264cb62f447f4536d7",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"August TT viz\"\nformat: html\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(tidymodels)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n── Attaching packages ────────────────────────────────────── tidymodels 1.2.0 ──\n✔ broom        1.0.6      ✔ rsample      1.2.1 \n✔ dials        1.2.1      ✔ tune         1.2.1 \n✔ infer        1.0.7      ✔ workflows    1.1.4 \n✔ modeldata    1.3.0      ✔ workflowsets 1.1.0 \n✔ parsnip      1.2.1      ✔ yardstick    1.3.1 \n✔ recipes      1.0.10     \n── Conflicts ───────────────────────────────────────── tidymodels_conflicts() ──\n✖ scales::discard() masks purrr::discard()\n✖ dplyr::filter()   masks stats::filter()\n✖ recipes::fixed()  masks stringr::fixed()\n✖ dplyr::lag()      masks stats::lag()\n✖ yardstick::spec() masks readr::spec()\n✖ recipes::step()   masks stats::step()\n• Dig deeper into tidy modeling with R at https://www.tmwr.org\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(ggplot2)\nlibrary(kableExtra)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'kableExtra'\n\nThe following object is masked from 'package:dplyr':\n\n    group_rows\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(caret)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nLoading required package: lattice\n\nAttaching package: 'caret'\n\nThe following objects are masked from 'package:yardstick':\n\n    precision, recall, sensitivity, specificity\n\nThe following object is masked from 'package:purrr':\n\n    lift\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(plotROC)\nlibrary(mulgar)\nlibrary(tourr)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'tourr'\n\nThe following object is masked from 'package:scales':\n\n    rescale\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(GGally)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRegistered S3 method overwritten by 'GGally':\n  method from   \n  +.gg   ggplot2\n\nAttaching package: 'GGally'\n\nThe following object is masked from 'package:tourr':\n\n    flea\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(uwot)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nLoading required package: Matrix\n\nAttaching package: 'Matrix'\n\nThe following objects are masked from 'package:tidyr':\n\n    expand, pack, unpack\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(animation)\nlibrary(magick)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nLinking to ImageMagick 6.9.12.93\nEnabled features: cairo, fontconfig, freetype, heic, lcms, pango, raw, rsvg, webp\nDisabled features: fftw, ghostscript, x11\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(ggfortify)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRegistered S3 method overwritten by 'ggfortify':\n  method          from   \n  autoplot.glmnet parsnip\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(ggrepel)\nlibrary(FunnelPlotR)\nlibrary(ggfunnel)\nlibrary(waffle)\nlibrary(ggimage)\nlibrary(ggwordcloud)\nlibrary(png)\n```\n:::\n\n\n\n\n\n\n\n\n\n# November 3rd week\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncbp_resp <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2024/2024-11-26/cbp_resp.csv')\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 68815 Columns: 12\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (10): month_grouping, month_abbv, component, land_border_region, area_of...\ndbl  (2): fiscal_year, encounter_count\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n\n```{.r .cell-code}\ncbp_state <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2024/2024-11-26/cbp_state.csv')\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 54939 Columns: 9\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (7): month_grouping, month_abbv, land_border_region, state, demographic,...\ndbl (2): fiscal_year, encounter_count\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncbp_resp\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 68,815 × 12\n   fiscal_year month_grouping month_abbv component            land_border_region\n         <dbl> <chr>          <chr>      <chr>                <chr>             \n 1        2020 FYTD           APR        Office of Field Ope… Northern Land Bor…\n 2        2020 FYTD           APR        Office of Field Ope… Northern Land Bor…\n 3        2020 FYTD           APR        Office of Field Ope… Northern Land Bor…\n 4        2020 FYTD           APR        Office of Field Ope… Northern Land Bor…\n 5        2020 FYTD           APR        Office of Field Ope… Northern Land Bor…\n 6        2020 FYTD           APR        Office of Field Ope… Northern Land Bor…\n 7        2020 FYTD           APR        Office of Field Ope… Northern Land Bor…\n 8        2020 FYTD           APR        Office of Field Ope… Northern Land Bor…\n 9        2020 FYTD           APR        Office of Field Ope… Northern Land Bor…\n10        2020 FYTD           APR        Office of Field Ope… Northern Land Bor…\n# ℹ 68,805 more rows\n# ℹ 7 more variables: area_of_responsibility <chr>, aor_abbv <chr>,\n#   demographic <chr>, citizenship <chr>, title_of_authority <chr>,\n#   encounter_type <chr>, encounter_count <dbl>\n```\n\n\n:::\n\n```{.r .cell-code}\ncbp_state\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 54,939 × 9\n   fiscal_year month_grouping month_abbv land_border_region   state demographic \n         <dbl> <chr>          <chr>      <chr>                <chr> <chr>       \n 1        2020 FYTD           APR        Northern Land Border ID    Single Adul…\n 2        2020 FYTD           APR        Northern Land Border ME    Single Adul…\n 3        2020 FYTD           APR        Northern Land Border ME    Single Adul…\n 4        2020 FYTD           APR        Northern Land Border ME    Single Adul…\n 5        2020 FYTD           APR        Northern Land Border ME    Single Adul…\n 6        2020 FYTD           APR        Northern Land Border ME    Single Adul…\n 7        2020 FYTD           APR        Northern Land Border ME    Single Adul…\n 8        2020 FYTD           APR        Northern Land Border ME    Single Adul…\n 9        2020 FYTD           APR        Northern Land Border ME    Single Adul…\n10        2020 FYTD           APR        Northern Land Border ME    Single Adul…\n# ℹ 54,929 more rows\n# ℹ 3 more variables: citizenship <chr>, title_of_authority <chr>,\n#   encounter_count <dbl>\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(stringr)\nlibrary(glue)\nlibrary(ggrepel)\nlibrary(ggplot2)\nlibrary(ggtext)\nlibrary(sysfonts)\nlibrary(showtext)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nLoading required package: showtextdb\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(ggbump)\nlibrary(gghighlight)\nlibrary(MetBrewer)\n\n# caption handles\nswd <- str_glue(\"#SWDchallenge: June 2024 &bull; Source: Synthetic data from ChatGPT<br>\")  \nli <- str_glue(\"<span style='font-family:fa6-brands'>&#xf08c;</span>\")  \ngh <- str_glue(\"<span style='font-family:fa6-brands'>&#xf09b;</span>\")\nmn <- str_glue(\"<span style='font-family:fa6-brands'>&#xf4f6;</span>\")\ntt <- str_glue(\"#TidyTuesdayR: November 2024 &bull; Source: US Customs and Border Protection (CBP) <br>\") \n\n# plot colors\nbkg_col      <- \"#EAB1CA\"  \ntitle_col    <- \"#3d3d3d\"           \nsubtitle_col <- \"#3d3d3d\"     \ncaption_col  <- \"#72647D\"   \ntext_col     <- colorspace::darken(\"gray40\" , 0.2)  \n\n# fonts\n\nfont_add('fa6-brands','fontawesome/otfs/Font Awesome 6 Brands-Regular-400.otf') \nfont_add_google(\"Lato\", regular.wt = 400, family = \"title\")                 \nfont_add_google(\"Radley\", regular.wt = 400, family = \"subtitle\")  \nfont_add_google(\"Quattrocento Sans\", regular.wt = 400, family = \"text\")        \nfont_add_google(\"Merriweather\", regular.wt = 400,family = \"caption\")\nshowtext_auto(enable = TRUE)  \n\n# Plot texts\n\ntitle_text <- \"<span style='color:darkred'>US authorities recording high border encounters <br> across nationalities (2020-2024)</span>\"\n\nsubtitle_text <- \"The U.S. Customs and Border Protection (CBP) has been managing record-high encounters with individuals of various nationalities at the U.S. borders. A chart highlighting the top 10 citizenships of inadmissible individuals at the southern and northern borders reveals that Mexican nationals remain the most frequently encountered. However, this marks the second consecutive decline in encounters involving Mexican citizens. While the numbers for most other nationalities have remained relatively stable, there has been a significant rise in encounters with individuals from Haiti and Venezuela, who were either apprehended for unauthorized border crossings or deemed inadmissible. \"\n\n\nX_icon <- glue(\"<span style='font-family:fa6-brands'>&#xe61b;</span>\")\n\ncaption_text <- str_glue(\"{li} Arindam Baruah | {X_icon} @wizsights | {gh} arinbaruah | Source: TidyTuesdayR | #wordcloud #rstudio #ggplot2\")\n\ntheme_set(theme_minimal(base_size = 15, base_family = \"text\"))                \n\n# Theme updates\n\ntheme_update(\n  plot.title.position   = \"plot\",\n  plot.caption.position = \"plot\",\n  legend.position       = 'plot',\n  plot.margin           = margin(t = 10, r = 15, b = 0, l = 15),\n  plot.background       = element_rect(fill = bkg_col, color = bkg_col),\n  panel.background      = element_rect(fill = bkg_col, color = bkg_col),\n  axis.title.x          = element_text(margin = margin(10, 0, 0, 0), size = rel(1), color = text_col, family = 'text', face = 'bold'),\n  axis.title.y          = element_text(margin = margin(0, 10, 0, 0), size = rel(1), color = text_col, family = 'text', face = 'bold'),\n  axis.text             = element_text(size = 10, color = text_col, family = 'text',face = \"bold\"),\n  panel.grid.minor.y    = element_blank(),\n  panel.grid.major.y    = element_line(linetype = \"dotted\", linewidth = 0.1, color = 'gray40'),\n  panel.grid.minor.x    = element_blank(),\n  panel.grid.major.x    = element_blank(),\n  axis.line.x           = element_line(color = \"#d7d7d8\", linewidth = .2),\n)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntop_countries_grouped <- cbp_resp %>% filter(citizenship != \"OTHER\") %>% \n  group_by(citizenship) %>% summarise(total = sum(encounter_count/10^3)) %>% \n  arrange(-total) %>% head(10)\n\ntop_countries <- top_countries_grouped$citizenship\n\ntop_countries_grouped <- cbp_resp %>% filter(citizenship != \"OTHER\" & citizenship %in% top_countries) %>% \n  group_by(fiscal_year,citizenship) %>% summarise(total = sum(encounter_count/10^3)) %>% \n  arrange(-total)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`summarise()` has grouped output by 'fiscal_year'. You can override using the\n`.groups` argument.\n```\n\n\n:::\n\n```{.r .cell-code}\ntop_countries_grouped$citizenship <- factor(top_countries_grouped$citizenship,levels = top_countries)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsubtitle_text <- \"The U.S. Customs and Border Protection (CBP) has been handling an average of <strong>approximately 178,000 encounters annually </strong> with individuals of <br> various nationalities at the U.S. borders. A chart highlighting the top 10 citizenships of inadmissible individuals at the southern and northern <br> borders reveals that <span style='color:steelblue'><strong>Mexican</strong></span> nationals remain the most frequently encountered. However, this marks the second consecutive decline in encounters <br> involving Mexican citizens. While the numbers for most other nationalities have remained relatively stable, there has been a <strong> significant rise in <br> encounters </strong> with individuals from <span style='color:#cc5200'><strong>Haiti</strong></span> and <span style='color:#004d00'><strong>Venezuela</strong></span>, who were either apprehended for unauthorized border crossings or deemed inadmissible.  \"\n\npl1 <- ggplot(data = top_countries_grouped) +\n    geom_hline(aes(yintercept = mean(total)),linetype=\"solid\", size=.25) +\n    geom_point(data= top_countries_grouped %>% \n               group_by(citizenship) %>% \n               slice_max(fiscal_year),\n             aes(x=fiscal_year, y=total, color=citizenship),shape=16) +\n  geom_line(aes(x=fiscal_year, y=total, color=citizenship)) +\n  gghighlight(use_direct_label = FALSE,\n              unhighlighted_params = list(colour = alpha(\"grey85\", 1))) +\n  geom_text(data=top_countries_grouped %>% \n               group_by(citizenship) %>% \n               slice_max(fiscal_year),\n             aes(x=fiscal_year, y=total, color= citizenship, label = round(total)),\n             hjust = 1, vjust = -1.5, size=2, fontface=\"bold\") +\n  facet_wrap(~factor(citizenship,levels = top_countries),nrow = 2) +\n  labs(title = title_text,\n       subtitle = subtitle_text,\n       caption = caption_text,\n       x = \"Fiscal year\",\n       y = \"Total number of encounters (in 1000s)\") +\n    scale_color_met_d(name=\"Redon\") + theme_minimal() +\n    theme(legend.position = \"none\",\n        panel.spacing = unit(3, \"lines\"),\n        panel.grid.minor = element_blank(),\n        panel.grid.major.y = element_blank(),\n        panel.grid.major.x = element_line(linewidth = .3, linetype = \"dashed\", color = \"grey50\"),\n        plot.margin = margin(20, 20, 20, 20),\n    legend.title.position = \"top\",\n    legend.title = element_text(\n      color = text_col,\n      hjust = 0.5,\n      family = \"text\",\n      face = \"bold\",\n      size = rel(3),\n    ),\n    legend.text = element_markdown(\n      color = text_col,\n      family = \"text\",\n      size = rel(2),\n      face = \"bold\"\n    ),\n    plot.title            = element_markdown(\n      size                = rel(4),\n      family              = \"title\",\n      face                = \"bold\",\n      color               = title_col,\n      lineheight          = 0.5,\n      margin              = margin(t = 5, b = 5),\n      hjust               = 0.5\n    ),        \n    plot.subtitle         = element_markdown(\n      size                = rel(2), \n      family              = 'subtitle',\n      color               = subtitle_col,\n      hjust               = 0,\n      lineheight          = 0.5, \n      margin              = margin(t = 5, b = 1)\n    ),\n      plot.caption          = element_markdown(\n      size                = rel(1.5), \n      family              = 'caption',\n      color               = caption_col,\n      lineheight          = 0.3,\n      hjust               = 0.5,\n      halign              = 0,\n      margin              = margin(t = 10, b = 10)\n    ),\n    strip.text = element_markdown(\n      size                = rel(1.5),\n      family              = 'text',\n      face                = \"bold\"   \n    ),\n    axis.title = element_markdown(\n      size                = rel(2),\n      family              = \"text\"\n    ),\n    axis.text.y  = element_markdown(\n      size = rel(2),\n      face = \"bold\"\n    ),\n    axis.text.x = element_markdown(\n      size = rel(2),\n      face = \"bold\"\n    )\n  ) \n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n```\n\n\n:::\n\n```{.r .cell-code}\npl1\n```\n\n::: {.cell-output-display}\n![](november_viz_files/figure-html/viz-1.png){width=672}\n:::\n\n```{.r .cell-code}\nggsave(\"US_Border_encounter.jpeg\",plot = pl1,width =8, height = 5)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndf1 <- read.csv(\"https://raw.githubusercontent.com/holtzy/R-graph-gallery/master/DATA/dataConsumerConfidence.csv\") %>% \n  mutate(date=lubridate::my(Time)) %>% \n  select(-Time) %>% \n  pivot_longer(!date, names_to = \"country\", values_to = \"value\") %>% \n  na.omit()\n\np1 <- df1 %>% \n  ggplot() +\n  geom_hline(yintercept = 100,linetype=\"solid\", size=.25) +\n  geom_point(data=df1 %>% \n               group_by(country) %>% \n               slice_max(date),\n             aes(x=date, y=value, color=country),shape=16) +\n  geom_line(aes(x=date, y=value, color=country)) +\n  gghighlight(use_direct_label = FALSE,\n              unhighlighted_params = list(colour = alpha(\"grey85\", 1))) +\n  geom_text(data=df1 %>% \n               group_by(country) %>% \n               slice_max(date),\n             aes(x=date, y=value, color=country, label = round(value)),\n             hjust = -.5, vjust = 2, size=rel(0.5), fontface=\"bold\") +\n  scale_x_date(date_labels = \"%y\") +\n  scale_y_continuous(breaks = c(90,95,100,105,110),\n                     labels = c(\"\",\"\",\"100\",\"\",\"\")\n                     ) +\n  #facet_wrap(~ country) +\n  facet_wrap(~  factor(country, levels=c('USA','China','Japan','Germany', 'UK','France', 'Italy', 'South Korea', 'Australia'))) +\n  coord_cartesian(clip = \"off\") +\n  theme(\n    axis.title = element_blank(),\n    axis.text = element_text(color=\"black\", size=7),\n    strip.text.x = element_text(face=\"bold\"),\n    plot.title = element_markdown(hjust=.5,size=34, color=\"black\",lineheight=.8, face=\"bold\", margin=margin(20,0,30,0)),\n    plot.subtitle = element_markdown(hjust=.5,size=18, color=\"black\",lineheight = 1, margin=margin(10,0,30,0)),\n    plot.caption = element_markdown(hjust=.5, margin=margin(60,0,0,0), size=8, color=\"black\", lineheight = 1.2),\n    plot.caption.position = \"plot\",\n    plot.background = element_rect(color=\"cornsilk\", fill=\"cornsilk\"),\n    plot.margin = margin(10,10,10,10),\n    legend.position = \"none\",\n    legend.title = element_text(face=\"bold\")\n  )\n```\n:::\n\n\n\n# November 4th week\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(stringr)\nlibrary(glue)\nlibrary(ggrepel)\nlibrary(ggplot2)\nlibrary(ggtext)\nlibrary(sysfonts)\nlibrary(showtext)\nlibrary(ggbump)\nlibrary(gghighlight)\nlibrary(MetBrewer)\n\n# caption handles\nswd <- str_glue(\"#SWDchallenge: June 2024 &bull; Source: Synthetic data from ChatGPT<br>\")  \nli <- str_glue(\"<span style='font-family:fa6-brands'>&#xf08c;</span>\")  \ngh <- str_glue(\"<span style='font-family:fa6-brands'>&#xf09b;</span>\")\nmn <- str_glue(\"<span style='font-family:fa6-brands'>&#xf4f6;</span>\")\ntt <- str_glue(\"#TidyTuesdayR: November 2024 &bull; Source: US Customs and Border Protection (CBP) <br>\") \n\n# plot colors\nbkg_col      <- \"#DED4BC\"  \ntitle_col    <- \"#3d3d3d\"           \nsubtitle_col <- \"#3d3d3d\"     \ncaption_col  <- \"#72647D\"   \ntext_col     <- colorspace::darken(\"gray40\" , 0.2)  \n\n# fonts\n\nfont_add('fa6-brands','fontawesome/otfs/Font Awesome 6 Brands-Regular-400.otf') \nfont_add_google(\"Pattaya\", regular.wt = 400, family = \"title\")                 \nfont_add_google(\"Radley\", regular.wt = 400, family = \"subtitle\")  \nfont_add_google(\"Quattrocento Sans\", regular.wt = 400, family = \"text\")        \nfont_add_google(\"Merriweather\", regular.wt = 400,family = \"caption\")\nshowtext_auto(enable = TRUE)  \n\n# Plot texts\n\ntitle_text <- \"<span style='color:darkred'>US authorities recording high border encounters <br> across nationalities (2020-2024)</span>\"\n\nsubtitle_text <- \"The U.S. Customs and Border Protection (CBP) has been managing record-high encounters with individuals of various nationalities at the U.S. borders. A chart highlighting the top 10 citizenships of inadmissible individuals at the southern and northern borders reveals that Mexican nationals remain the most frequently encountered. However, this marks the second consecutive decline in encounters involving Mexican citizens. While the numbers for most other nationalities have remained relatively stable, there has been a significant rise in encounters with individuals from Haiti and Venezuela, who were either apprehended for unauthorized border crossings or deemed inadmissible. \"\n\n\nX_icon <- glue(\"<span style='font-family:fa6-brands'>&#xe61b;</span>\")\n\ncaption_text <- str_glue(\"{li} Arindam Baruah | {X_icon} @wizsights | {gh} arinbaruah | Source: TidyTuesdayR | #wordcloud #rstudio #ggplot2\")\n\ntheme_set(theme_minimal(base_size = 15, base_family = \"text\"))                \n\n# Theme updates\n\ntheme_update(\n  plot.title.position   = \"plot\",\n  plot.caption.position = \"plot\",\n  legend.position       = 'plot',\n  plot.margin           = margin(t = 10, r = 15, b = 0, l = 15),\n  plot.background       = element_rect(fill = bkg_col, color = bkg_col),\n  panel.background      = element_rect(fill = bkg_col, color = bkg_col),\n  axis.title.x          = element_text(margin = margin(10, 0, 0, 0), size = rel(1), color = text_col, family = 'text', face = 'bold'),\n  axis.title.y          = element_text(margin = margin(0, 10, 0, 0), size = rel(1), color = text_col, family = 'text', face = 'bold'),\n  axis.text             = element_text(size = 10, color = text_col, family = 'text',face = \"bold\"),\n  panel.grid.minor.y    = element_blank(),\n  panel.grid.major.y    = element_line(linetype = \"dotted\", linewidth = 0.1, color = 'gray40'),\n  panel.grid.minor.x    = element_blank(),\n  panel.grid.major.x    = element_blank(),\n  axis.line.x           = element_line(color = \"#d7d7d8\", linewidth = .2),\n)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntop_countries_grouped <- cbp_resp %>% filter(citizenship != \"OTHER\") %>% \n  group_by(citizenship) %>% summarise(total = sum(encounter_count/10^3)) %>% \n  arrange(-total) %>% head(10)\n\ntop_countries <- top_countries_grouped$citizenship\n\ntop_countries_grouped <- cbp_resp %>% filter(citizenship != \"OTHER\" & citizenship %in% top_countries) %>% \n  group_by(fiscal_year,citizenship) %>% summarise(total = sum(encounter_count/10^3)) %>% \n  arrange(-total)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`summarise()` has grouped output by 'fiscal_year'. You can override using the\n`.groups` argument.\n```\n\n\n:::\n\n```{.r .cell-code}\ntop_countries_grouped$citizenship <- factor(top_countries_grouped$citizenship,levels = top_countries)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsubtitle_text <- \"The U.S. Customs and Border Protection (CBP) has been handling an average of <strong>approximately 178,000 encounters annually </strong> with individuals of <br> various nationalities at the U.S. borders. A chart highlighting the top 10 citizenships of inadmissible individuals at the southern and northern <br> borders reveals that <span style='color:steelblue'><strong>Mexican</strong></span> nationals remain the most frequently encountered. However, this marks the second consecutive decline in encounters <br> involving Mexican citizens. While the numbers for most other nationalities have remained relatively stable, there has been a <strong> significant rise in <br> encounters </strong> with individuals from <span style='color:#cc5200'><strong>Haiti</strong></span> and <span style='color:#004d00'><strong>Venezuela</strong></span>, who were either apprehended for unauthorized border crossings or deemed inadmissible.  \"\n\npl1 <- ggplot(data = top_countries_grouped) +\n    geom_hline(aes(yintercept = mean(total)),linetype=\"solid\", size=.25) +\n    geom_point(data= top_countries_grouped %>% \n               group_by(citizenship) %>% \n               slice_max(fiscal_year),\n             aes(x=fiscal_year, y=total, color=citizenship),shape=16) +\n  geom_line(aes(x=fiscal_year, y=total, color=citizenship)) +\n  gghighlight(use_direct_label = FALSE,\n              unhighlighted_params = list(colour = alpha(\"grey85\", 1))) +\n  geom_text(data=top_countries_grouped %>% \n               group_by(citizenship) %>% \n               slice_max(fiscal_year),\n             aes(x=fiscal_year, y=total, color= citizenship, label = round(total)),\n             hjust = 1, vjust = -1.5, size=2, fontface=\"bold\") +\n  facet_wrap(~factor(citizenship,levels = top_countries),nrow = 2) +\n  labs(title = title_text,\n       subtitle = subtitle_text,\n       caption = caption_text,\n       x = \"Fiscal year\",\n       y = \"Total number of encounters (in 1000s)\") +\n    scale_color_met_d(name=\"Redon\") + theme_minimal() +\n    theme(legend.position = \"none\",\n        panel.spacing = unit(3, \"lines\"),\n        panel.grid.minor = element_blank(),\n        panel.grid.major.y = element_blank(),\n        panel.grid.major.x = element_line(linewidth = .3, linetype = \"dashed\", color = \"grey50\"),\n        plot.margin = margin(20, 20, 20, 20),\n    legend.title.position = \"top\",\n    legend.title = element_text(\n      color = text_col,\n      hjust = 0.5,\n      family = \"text\",\n      face = \"bold\",\n      size = rel(3),\n    ),\n    legend.text = element_markdown(\n      color = text_col,\n      family = \"text\",\n      size = rel(2),\n      face = \"bold\"\n    ),\n    plot.title            = element_markdown(\n      size                = rel(4),\n      family              = \"title\",\n      face                = \"bold\",\n      color               = title_col,\n      lineheight          = 0.5,\n      margin              = margin(t = 5, b = 5),\n      hjust               = 0.5\n    ),        \n    plot.subtitle         = element_markdown(\n      size                = rel(2), \n      family              = 'subtitle',\n      color               = subtitle_col,\n      hjust               = 0,\n      lineheight          = 0.5, \n      margin              = margin(t = 5, b = 1)\n    ),\n      plot.caption          = element_markdown(\n      size                = rel(1.5), \n      family              = 'caption',\n      color               = caption_col,\n      lineheight          = 0.3,\n      hjust               = 0.5,\n      halign              = 0,\n      margin              = margin(t = 10, b = 10)\n    ),\n    strip.text = element_markdown(\n      size                = rel(1.5),\n      family              = 'text',\n      face                = \"bold\"   \n    ),\n    axis.title = element_markdown(\n      size                = rel(2),\n      family              = \"text\"\n    ),\n    axis.text.y  = element_markdown(\n      size = rel(2),\n      face = \"bold\"\n    ),\n    axis.text.x = element_markdown(\n      size = rel(2),\n      face = \"bold\"\n    )\n  ) \n  \npl1\n```\n\n::: {.cell-output-display}\n![](november_viz_files/figure-html/viz1-1.png){width=672}\n:::\n\n```{.r .cell-code}\nggsave(\"US_Border_encounter.jpeg\",plot = pl1,width =8, height = 5)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nparfumo_data_clean <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2024/2024-12-10/parfumo_data_clean.csv')\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 59325 Columns: 13\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (10): Number, Name, Brand, Concentration, Main_Accords, Top_Notes, Middl...\ndbl  (3): Release_Year, Rating_Value, Rating_Count\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nparfumo_data_clean %>% ggplot(aes(x = Rating_Value)) + geom_histogram() \n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Removed 29279 rows containing non-finite outside the scale range\n(`stat_bin()`).\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](november_viz_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\n\n\n## Data wrangling\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nparfumo_data_clean <- parfumo_data_clean %>% mutate(Rating_category = case_when(Rating_Value <= 5 ~ \"Low\",\n                                                                                Rating_Value > 5 & Rating_Value <= 7.5 ~ \"Medium\",\n                                                                                Rating_Value > 7.5 ~ \"High\"))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nparfumo_data_clean <- parfumo_data_clean %>% drop_na()\nmain_accords_long <- parfumo_data_clean %>% separate_rows(Main_Accords,sep = \",\")\ntop_notes_long <- parfumo_data_clean %>% separate_rows(Top_Notes,sep = \",\")\nmid_notes_long <- parfumo_data_clean %>% separate_rows(Middle_Notes,sep = \",\")\nbase_notes_long <- parfumo_data_clean %>% separate_rows(Base_Notes,sep = \",\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmain_accords_summarised <- main_accords_long %>% group_by(Release_Year,Main_Accords) %>% summarise(Average_rating = mean(Rating_Value))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`summarise()` has grouped output by 'Release_Year'. You can override using the\n`.groups` argument.\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmain_accords_summarised %>% ggplot(aes(x = Release_Year,y = Average_rating,color = Main_Accords)) + geom_line() + facet_wrap(~Main_Accords)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`geom_line()`: Each group consists of only one observation.\nℹ Do you need to adjust the group aesthetic?\n`geom_line()`: Each group consists of only one observation.\nℹ Do you need to adjust the group aesthetic?\n`geom_line()`: Each group consists of only one observation.\nℹ Do you need to adjust the group aesthetic?\n`geom_line()`: Each group consists of only one observation.\nℹ Do you need to adjust the group aesthetic?\n`geom_line()`: Each group consists of only one observation.\nℹ Do you need to adjust the group aesthetic?\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](november_viz_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmain_accords_long %>% group_by(Release_Year) %>% summarise(n_distinct(Name))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 19 × 2\n   Release_Year `n_distinct(Name)`\n          <dbl>              <int>\n 1         1972                  2\n 2         1993                  1\n 3         1995                  3\n 4         1996                  2\n 5         1999                  2\n 6         2002                  1\n 7         2005                  2\n 8         2006                  1\n 9         2007                  1\n10         2008                  3\n11         2010                  2\n12         2011                  2\n13         2012                  2\n14         2013                  1\n15         2014                  2\n16         2015                  4\n17         2016                  3\n18         2017                  5\n19         2022                  1\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nhigh_rated <- top_notes_long %>% filter(Rating_category == \"High\")\n\nhigh_rated_topnotes <- high_rated %>% group_by(Top_Notes) %>% summarise(Total = n()) %>% arrange(-Total)\n\nhigh_rated <- mid_notes_long %>% filter(Rating_category == \"High\")\n\nhigh_rated_midnotes <- high_rated %>% group_by(Middle_Notes) %>% summarise(Total = n())  %>% arrange(-Total)\n\nhigh_rated <- base_notes_long %>% filter(Rating_category == \"High\")\n\nhigh_rated_basenotes <- high_rated %>% group_by(Base_Notes) %>% summarise(Total = n())  %>% arrange(-Total)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\npl_midnotes <- ggplot(\n  high_rated_midnotes ,\n  aes(\n    label = Middle_Notes, size = Total,color = Total\n  )\n) +\n  geom_text_wordcloud_area(\n    mask = readPNG(\"perfume.png\"\n    ),\n    rm_outside = TRUE\n  ) +\n  labs(title = \"Middle notes of highly rated perfumes\") +\n  scale_size_area(max_size = 40) +\n  scale_color_gradient(low = \"#00CED1\", high = \"#2E8B57\") +\n  theme(legend.position = \"none\",\n        panel.spacing = unit(3, \"lines\"),\n        panel.grid.minor = element_blank(),\n        panel.grid.major.y = element_blank(),\n        panel.grid.major.x = element_blank(),\n        plot.margin = margin(20, 20, 20, 20),\n    legend.title.position = \"top\",\n    legend.title = element_text(\n      color = text_col,\n      hjust = 0.5,\n      family = \"text\",\n      face = \"bold\",\n      size = rel(3.5),\n    ),\n    legend.text = element_markdown(\n      color = text_col,\n      family = \"text\",\n      size = rel(2),\n      face = \"bold\"\n    ),\n    plot.title            = element_markdown(\n      size                = rel(2),\n      family              = \"subtitle\",\n      face                = \"bold\",\n      color               = title_col,\n      lineheight          = 0.5,\n      margin              = margin(t = 5, b = 5),\n      hjust               = 0.5\n    ),        \n    plot.subtitle         = element_markdown(\n      size                = rel(2.5), \n      family              = 'subtitle',\n      color               = subtitle_col,\n      hjust               = 0,\n      lineheight          = 0.5, \n      margin              = margin(t = 5, b = 1)\n    ),\n      plot.caption          = element_markdown(\n      size                = rel(2), \n      family              = 'caption',\n      color               = caption_col,\n      lineheight          = 0.3,\n      hjust               = 0.5,\n      halign              = 0,\n      margin              = margin(t = 10, b = 10)\n    ),\n    strip.text = element_markdown(\n      size                = rel(1.5),\n      family              = 'text',\n      face                = \"bold\"   \n    ),\n    axis.title = element_markdown(\n      size                = rel(2),\n      family              = \"text\"\n    ),\n    axis.text.y  = element_markdown(\n      size = rel(2),\n      face = \"bold\"\n    ),\n    axis.text.x = element_markdown(\n      size = rel(2),\n      face = \"bold\"\n    )\n  ) \n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\npl_basenotes <- ggplot(\n  high_rated_basenotes ,\n  aes(\n    label = Base_Notes, size = Total,color = Total\n  )\n) +\n  geom_text_wordcloud_area(\n    mask = readPNG(\"perfume.png\"\n    ),\n    rm_outside = TRUE\n  ) +\n    labs(title = \"Base notes of highly rated perfumes\") +\n  scale_size_area(max_size = 40) +\n  scale_color_gradient(low = \"#6a1b9a\", high = \"#ff4081\") +\n  theme(legend.position = \"none\",\n        panel.spacing = unit(3, \"lines\"),\n        panel.grid.minor = element_blank(),\n        panel.grid.major.y = element_blank(),\n        panel.grid.major.x = element_blank(),\n        plot.margin = margin(20, 20, 20, 20),\n    legend.title.position = \"top\",\n    legend.title = element_text(\n      color = text_col,\n      hjust = 0.5,\n      family = \"text\",\n      face = \"bold\",\n      size = rel(3.5),\n    ),\n    legend.text = element_markdown(\n      color = text_col,\n      family = \"text\",\n      size = rel(2),\n      face = \"bold\"\n    ),\n    plot.title            = element_markdown(\n      size                = rel(2),\n      family              = \"subtitle\",\n      face                = \"bold\",\n      color               = title_col,\n      lineheight          = 0.5,\n      margin              = margin(t = 5, b = 5),\n      hjust               = 0.7\n    ),        \n    plot.subtitle         = element_markdown(\n      size                = rel(2.5), \n      family              = 'subtitle',\n      color               = subtitle_col,\n      hjust               = 0,\n      lineheight          = 0.5, \n      margin              = margin(t = 5, b = 1)\n    ),\n      plot.caption          = element_markdown(\n      size                = rel(2), \n      family              = 'caption',\n      color               = caption_col,\n      lineheight          = 0.3,\n      hjust               = 0.5,\n      halign              = 0,\n      margin              = margin(t = 10, b = 10)\n    ),\n    strip.text = element_markdown(\n      size                = rel(1.5),\n      family              = 'text',\n      face                = \"bold\"   \n    ),\n    axis.title = element_markdown(\n      size                = rel(2),\n      family              = \"text\"\n    ),\n    axis.text.y  = element_markdown(\n      size = rel(2),\n      face = \"bold\"\n    ),\n    axis.text.x = element_markdown(\n      size = rel(2),\n      face = \"bold\"\n    )\n  ) \n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\npl_topnotes <- ggplot(\n  high_rated_topnotes ,\n  aes(\n    label = Top_Notes, size = Total,color = Total\n  )\n) +\n  geom_text_wordcloud_area(\n    mask = readPNG(\"perfume.png\",\n    ),\n    rm_outside = TRUE\n  ) +\n      labs(title = \"Top notes of highly rated perfumes\") +\n  scale_size_area(max_size = 40) +\n  scale_color_gradient(low = \"#d84315\", high = \"#3498db\") +\n  theme(legend.position = \"none\",\n        panel.spacing = unit(3, \"lines\"),\n        panel.grid.minor = element_blank(),\n        panel.grid.major.y = element_blank(),\n        panel.grid.major.x = element_blank(),\n        plot.margin = margin(20, 20, 20, 20),\n    legend.title.position = \"top\",\n    legend.title = element_text(\n      color = text_col,\n      hjust = 0.5,\n      family = \"text\",\n      face = \"bold\",\n      size = rel(3.5),\n    ),\n    legend.text = element_markdown(\n      color = text_col,\n      family = \"text\",\n      size = rel(2),\n      face = \"bold\"\n    ),\n    plot.title            = element_markdown(\n      size                = rel(2),\n      family              = \"subtitle\",\n      face                = \"bold\",\n      color               = title_col,\n      lineheight          = 0.5,\n      margin              = margin(t = 5, b = 5),\n      hjust               = 0.5\n    ),        \n    plot.subtitle         = element_markdown(\n      size                = rel(2.5), \n      family              = 'subtitle',\n      color               = subtitle_col,\n      hjust               = 0,\n      lineheight          = 0.5, \n      margin              = margin(t = 5, b = 1)\n    ),\n      plot.caption          = element_markdown(\n      size                = rel(2), \n      family              = 'caption',\n      color               = caption_col,\n      lineheight          = 0.3,\n      hjust               = 0.5,\n      halign              = 0,\n      margin              = margin(t = 10, b = 10)\n    ),\n    strip.text = element_markdown(\n      size                = rel(1.5),\n      family              = 'text',\n      face                = \"bold\"   \n    ),\n    axis.title = element_markdown(\n      size                = rel(2),\n      family              = \"text\"\n    ),\n    axis.text.y  = element_markdown(\n      size = rel(2),\n      face = \"bold\"\n    ),\n    axis.text.x = element_markdown(\n      size = rel(2),\n      face = \"bold\"\n    )\n  ) \n```\n:::\n\n\n\n# Ratings\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nparfumo_data_clean\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 45 × 14\n   Number Name        Brand Release_Year Concentration Rating_Value Rating_Count\n   <chr>  <chr>       <chr>        <dbl> <chr>                <dbl>        <dbl>\n 1 001    Man Loewe … Loewe         2016 Eau de Parfum          7.6          148\n 2 001    Man Loewe … Loewe         2017 Eau de Toile…          7.7           46\n 3 001    Woman Loew… Loewe         2017 Eau de Toile…          6.5           24\n 4 1      Million Pa… Paco…         2008 Eau de Toile…          6.7         2633\n 5 1      Million Pa… Paco…         2008 Lotion Après…          7.1            5\n 6 1000   Jean Patou… Jean…         1972 Eau de Toile…          8.6           50\n 7 1000   Jean Patou… Jean…         1972 Parfum                 8            186\n 8 1697   Frapin 201… Frap…         2011 Eau de Parfum          7.7           19\n 9 1831   Histoires … Hist…         2015 Absolu Eau d…          6.3            8\n10 1875   Histoires … Hist…         2014 Parfum                 6.8           18\n# ℹ 35 more rows\n# ℹ 7 more variables: Main_Accords <chr>, Top_Notes <chr>, Middle_Notes <chr>,\n#   Base_Notes <chr>, Perfumers <chr>, URL <chr>, Rating_category <chr>\n```\n\n\n:::\n\n```{.r .cell-code}\ntotal_ratings <- parfumo_data_clean %>% group_by(Brand) %>% summarise(\"Total ratings\" = sum(Rating_Count)) %>% arrange(-`Total ratings`)\navg_ratings <- parfumo_data_clean %>% group_by(Brand) %>% summarise(\"Average rating\" = mean(Rating_Value)) %>% arrange(`Average rating`)\n\nratings <- total_ratings %>% left_join(avg_ratings,by = \"Brand\") %>% arrange(`Average rating`) %>% tail(15)\n\nrating_order <- ratings$Brand\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntitle_text <- \"The Fragrance Ratings Guide: Top Brands Compared\"\n\nsubtitle_text <- \"<span style='color:#DDAA0C'><strong>Hermès</span></strong> fragrances lead the pack with an impressive average rating of 8.8, securing their place as the highest-rated brand. Following closely are <span style='color:#236A82'><strong>Roja Parfums</span></strong> <br> with a strong 8.4, <span style='color:#ff4081'><strong>Jean Patou</span></strong> at 8.3, and <span style='color:#D48FDC'><strong>Chanel and Tous</span></strong>, tied at 8.2, rounding out the top five highest-rated perfume brands.\"\n\nratings_long <- ratings %>% pivot_longer(cols = c(\"Total ratings\",\"Average rating\"),values_to = \"Value\",names_to = \"Field\")\n\n\nratings_long$Brand <- factor(ratings_long$Brand,levels = rating_order)\npl_perfume <- ggplot(ratings_long %>% filter(Field == \"Average rating\"),aes(y = Brand, x = Value,fill = Value)) +  \n  geom_rect(\n    xmin = 7.5, xmax = 10, \n    ymin = 0, ymax = 20,\n    fill = \"#E5BF4A\",\n    alpha = 0.2\n  ) +\n  geom_col() + geom_vline(xintercept = 7.5, linetype = \"dotted\") + \n  geom_text(aes(label = round(Value,1)), size = 7,\n            color = \"white\",nudge_x = -0.23) + \n  annotate(\n    \"text\",\n    x = 8.4,\n    y = \"Sean John\",\n    colour = \"black\",\n    label = 'Highly Rated Fragrances',\n    family = \"text\",\n    face = \"bold\",\n    size = unit(10, \"pt\")\n  ) + scale_fill_continuous(type = \"gradient\",low = \"#132B43\",\n  high = \"#AF9ACD\",) +\n  labs(title = title_text,\n       subtitle = subtitle_text,\n       #caption = caption_text,\n       x = \"Average rating\",\n       y = \"Fragrance brand\") +\n    scale_color_met_d(name=\"Redon\") + \n    theme(legend.position = \"none\",\n        panel.spacing = unit(3, \"lines\"),\n        panel.grid.minor = element_blank(),\n        panel.grid.major.y = element_blank(),\n        panel.grid.major.x = element_blank(),\n        plot.margin = margin(20, 20, 20, 20),\n    legend.title.position = \"top\",\n    legend.title = element_text(\n      color = text_col,\n      hjust = 0.5,\n      family = \"text\",\n      face = \"bold\",\n      size = rel(3.5),\n    ),\n    legend.text = element_markdown(\n      color = text_col,\n      family = \"text\",\n      size = rel(2),\n      face = \"bold\"\n    ),\n    plot.title            = element_markdown(\n      size                = rel(5),\n      family              = \"title\",\n      face                = \"bold\",\n      color               = title_col,\n      lineheight          = 0.5,\n      margin              = margin(t = 5, b = 5),\n      hjust               = 0.5\n    ),        \n    plot.subtitle         = element_markdown(\n      size                = rel(2.5), \n      family              = 'subtitle',\n      color               = subtitle_col,\n      hjust               = 0,\n      lineheight          = 0.5, \n      margin              = margin(t = 5, b = 1)\n    ),\n      plot.caption          = element_markdown(\n      size                = rel(2), \n      family              = 'caption',\n      color               = caption_col,\n      lineheight          = 0.3,\n      hjust               = 0.5,\n      halign              = 0,\n      margin              = margin(t = 10, b = 10)\n    ),\n    strip.text = element_markdown(\n      size                = rel(1.5),\n      family              = 'text',\n      face                = \"bold\"   \n    ),\n    axis.title = element_markdown(\n      size                = rel(2),\n      family              = \"text\"\n    ),\n    axis.text.y  = element_markdown(\n      size = rel(2)\n    ),\n    axis.text.x = element_markdown(\n      size = rel(2)\n    )\n  ) \n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in annotate(\"text\", x = 8.4, y = \"Sean John\", colour = \"black\", :\nIgnoring unknown parameters: `face`\n```\n\n\n:::\n\n```{.r .cell-code}\nggsave(\"Fragrance_comparison.jpeg\",plot = pl_perfume,width =8, height = 5)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# TITLE\ntext <- tibble(\n  x = 100, y = 0,\n  label = caption_text\n)\n\ncaption <- ggplot(text, aes(x = x, y = y)) +\n  geom_textbox(\n    aes(label = label),\n    box.color = bkg_col, fill=bkg_col, width = unit(35, \"lines\"),\n    family=\"text\", size = 9, lineheight = 1,\n    hjust = 0.5, vjust = 0.5  # Centering the text\n  ) +\n  coord_cartesian(expand = FALSE, clip = \"off\") +\n  theme_void() +\n  theme(plot.background = element_rect(color=bkg_col, fill=bkg_col))\ncaption\n```\n\n::: {.cell-output-display}\n![](november_viz_files/figure-html/unnamed-chunk-18-1.png){width=672}\n:::\n:::\n\n\n\n\n#Plot merging\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(patchwork)\n\npl_final <- (pl_perfume)/(pl_basenotes + pl_midnotes + pl_topnotes)/caption +\n             plot_layout(heights = c(6,4,0.5))\n\nggsave(\"Fragrance_infographic.jpeg\",plot = pl_final,width =12, height = 7)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in wordcloud_boxes(data_points = points_valid_first, boxes = boxes, :\nSome words could not fit on page. They have been removed.\nWarning in wordcloud_boxes(data_points = points_valid_first, boxes = boxes, :\nSome words could not fit on page. They have been removed.\n```\n\n\n:::\n:::\n",
    "supporting": [
      "november_viz_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}