---
title: "Observing variations of LGBTQ+ movies scores across languages"
author: "Arindam Baruah"
date: "2024-07-14"
categories: [R,data cleaning,exploratory data analysis,plot aesthetics, ggplot2]
quarto-required: ">=1.3.0"
format:
    html:
        output-file: post.html
execute: 
  echo: true
  message: false
  warning: false
number-sections: true
---

# Introduction

This week's [TidyTuesday](https://github.com/rfordatascience/tidytuesday/blob/master/README.md) dataset dealt with LGBTQ+ movie data released across the globe and the interesting information that we can extract out of it. üè≥Ô∏è‚Äçüåàüè≥Ô∏è‚Äçüåà

More details on this dataset [here](https://github.com/rfordatascience/tidytuesday/blob/master/data/2024/2024-06-25/readme.md) üëà

# Methodology

The source of the data and the code used to obtain @fig-plot is delineated through @sec-source to @sec-viz.

## Sourcing the data {#sec-source}

```{r}
#| code-fold: true
lgbtq_movies <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2024/2024-06-25/lgbtq_movies.csv')
```


## Setting the aesthetic theme

```{r theme}
#| code-fold: true

library(tidyverse)
library(glue)
library(ggrepel)
library(ggplot2)
library(ggtext)
library(sysfonts)
library(showtext)
library(ggridges)


# caption handles
swd <- str_glue("#SWDchallenge: June 2024 &bull; Source: Synthetic data from ChatGPT<br>")  
li <- str_glue("<span style='font-family:fa6-brands'>&#xf08c;</span>")  
gh <- str_glue("<span style='font-family:fa6-brands'>&#xf09b;</span>")
mn <- str_glue("<span style='font-family:fa6-brands'>&#xf4f6;</span>")


# plot colors
bkg_col      <- colorspace::lighten("#f2f5e5", 0.05)    
title_col    <- "#3d3d3d"           
subtitle_col <- "#3d3d3d"     
caption_col  <- "#72647D"   
text_col     <- colorspace::darken("gray40" , 0.2)  

# fonts

font_add('fa6-brands','fontawesome/otfs/Font Awesome 6 Brands-Regular-400.otf') 
font_add_google("Oswald", regular.wt = 400, family = "title")                 
font_add_google("Quattrocento Sans", regular.wt = 400, family = "subtitle")  
font_add_google("Quattrocento Sans", regular.wt = 400, family = "text")        
font_add_google("Merriweather", regular.wt = 400,family = "caption")
showtext_auto(enable = TRUE)  


X_icon <- glue("<span style='font-family:fa6-brands'>&#xe61b;</span>")

caption_text <- str_glue("{li} Arindam Baruah | {X_icon} @wizsights | {gh} arinbaruah | Source: TidyTuesday |#rstudio #ggplot2")

theme_set(theme_minimal(base_size = 15, base_family = "text"))                

# Theme updates

theme_update(
  plot.title.position   = "plot",
  plot.caption.position = "plot",
  legend.position       = 'plot',
  plot.margin           = margin(t = 10, r = 15, b = 0, l = 15),
  plot.background       = element_rect(fill = bkg_col, color = bkg_col),
  panel.background      = element_rect(fill = bkg_col, color = bkg_col),
  axis.title.x          = element_text(margin = margin(10, 0, 0, 0), size = rel(1), color = text_col, family = 'text', face = 'bold'),
  axis.title.y          = element_text(margin = margin(0, 10, 0, 0), size = rel(1), color = text_col, family = 'text', face = 'bold'),
  axis.text             = element_text(size = 10, color = text_col, family = 'text',face = "bold"),
  panel.grid.minor.y    = element_blank(),
  panel.grid.major.y    = element_line(linetype = "dotted", linewidth = 0.1, color = 'gray40'),
  panel.grid.minor.x    = element_blank(),
  panel.grid.major.x    = element_blank(),
  axis.line.x           = element_line(color = "#d7d7d8", linewidth = .2),
)

 

```

## Data wrangling

```{r}
#| code-fold: true

top_langs <- lgbtq_movies %>% group_by(original_language) %>% 
  summarise(Total = n()) %>% arrange(-Total) %>% head(6)  # Top 6 most released movies by language

lgbtq_movies <- lgbtq_movies %>% filter(original_language %in% top_langs$original_language)
```




```{r}
#| code-fold: true

lgbtq_movies <- lgbtq_movies %>% mutate(original_lang = case_when(original_language == "en" ~ "English",
                                                  original_language == "pt" ~ "Portugese",
                                                  original_language == "ja" ~ "Japanese",
                                                  original_language == "fr" ~ "French",
                                                  original_language == "es" ~ "Spanish",
                                                  original_language == "de" ~ "German",
                                                  .default = original_language))
```



## Data Visualisation {#sec-viz}

```{r}
#| code-fold: true
#| echo: true

lgbtq_colors <- c("#FF0018", "#FFA52C", "#FFFF41", "#008018", "#0000F9", "#86007D", "#8B4513", "#FFD700")

title_text <- "Average vote score distribution by language in LGBTQ+ Movies"


subtitle_text <- "Visualizing the average vote scores across LGBTQ+ categorized movies based on their respective languages reveals <br> an intriguing pattern. The overall distribution of vote scores appears to be <strong><span style='color: darkred;'>bimodal</span></strong>, with noticeable peaks at scores <br> of 0 and 6. This suggests that viewers tend to either strongly dislike these movies or find them to be average. <br> Additionally, it's interesting to note that <strong> English-language </strong> movies exhibit a higher frequency of low scores compared <br> to movies in other languages. This may indicate differing audience preferences or varying production quality <br> across different language groups."

caption_text <- str_glue("{li} Arindam Baruah | {X_icon} @wizsights | {gh} arinbaruah | Source: TidyTuesday |#rstudio #ggplot2")

pl <- lgbtq_movies %>% ggplot(aes(vote_average,original_lang)) + 
  geom_density_ridges(aes(fill = factor(original_lang)), color = "grey30", linewidth = .25, alpha = .9) +
  scale_fill_manual(values = lgbtq_colors) +
  geom_vline(xintercept = c(0,5,10), linewidth = .3, linetype = "dotted", lineend = "round",alpha = 0.5) +
  labs(x = "Average Vote Score",
       y="",
       title = title_text,
       subtitle = subtitle_text,
       caption = caption_text) +
  theme(
    
     axis.text.x        = element_text(
      size                = rel(1.5),
      family              = "text",
      face                = "bold",
      color               = title_col,
      lineheight          = 1.1,
      margin              = margin(t = 5, b = 5),
      hjust               = 0.5
    ),
    axis.text        = element_text(
      size                = rel(1.8),
      family              = "text",
      face                = "bold",
      color               = title_col,
      lineheight          = 1.1,
      margin              = margin(t = 5, b = 5),
      hjust               = 0.5
    ),
    axis.title        = element_text(
      size                = rel(1.5),
      family              = "text",
      face                = "bold",
      color               = title_col,
      lineheight          = 1.1,
      margin              = margin(t = 5, b = 5),
      hjust               = 0.5
    ),
    plot.title        = element_text(
      size                = rel(4),
      family              = "title",
      face                = "bold",
      color               = title_col,
      lineheight          = 1.1,
      margin              = margin(t = 5, b = 5),
      hjust               = 0.5
    ),
    plot.subtitle         = element_markdown(
      size                = rel(2), 
      family              = 'subtitle',
      color               = subtitle_col,
      hjust               = 0,
      lineheight          = 0.4, 
      margin              = margin(t = 5, b = 1)
    ),
    plot.caption          = element_markdown(
      size                = rel(1.5), 
      family              = 'caption',
      color               = caption_col,
      lineheight          = 0.6,
      hjust               = 0.5,
      halign              = 0,
      margin              = margin(t = 10, b = 10)
    )) 
```

## Final visualisation

![Average vote score distribution by language in LGBTQ+ Movies](lgbtq_density_plot.png){#fig-plot}

@fig-plot illustrates the average vote scores of all the LGBTQ+ categorised movies across different languages. For the current analysis, languages containing at least 100 or greater number of movies were considered.

So what do we learn from this ? ü§îüïµüèª‚Äç‚ôÄÔ∏è

:::{.callout-note}
# Key takeaways

 - It is interesting to note how the average vote score was __bimodal across all languages.__ üßë‚Äçüíª
 - In general, English LGBTQ+ movies scored lower than others. ü§Ø 
 
:::

# References

1. __tidyverse__: Wickham H, Averick M, Bryan J, Chang W, McGowan LD, Fran√ßois R, Grolemund G, Hayes A, Henry L, Hester J, Kuhn M,
  Pedersen TL, Miller E, Bache SM, M√ºller K, Ooms J, Robinson D, Seidel DP, Spinu V, Takahashi K, Vaughan D, Wilke C,
  Woo K, Yutani H (2019). ‚ÄúWelcome to the tidyverse.‚Äù _Journal of Open Source Software_, *4*(43), 1686.
  doi:10.21105/joss.01686 <https://doi.org/10.21105/joss.01686>.
  
2. __glue__: Hester J, Bryan J (2024). _glue: Interpreted String Literals_. R package version 1.7.0, <https://CRAN.R-project.org/package=glue>.

3. __ggrepel__: Slowikowski K (2024). _ggrepel: Automatically Position Non-Overlapping Text Labels with 'ggplot2'_. R package version 0.9.5,
  <https://CRAN.R-project.org/package=ggrepel>.
4. __ggplot2__: H. Wickham. ggplot2: Elegant Graphics for Data Analysis. Springer-Verlag New York, 2016.

5. __ggtext__: Wilke C, Wiernik B (2022). _ggtext: Improved Text Rendering Support for 'ggplot2'_. R package version 0.1.2,
  <https://CRAN.R-project.org/package=ggtext>.
6. __sysfonts__: Qiu Y, details. aotifSfAf (2024). _sysfonts: Loading Fonts into R_. R package version 0.8.9,
  <https://CRAN.R-project.org/package=sysfonts>.
7. __showtext__: Qiu Y, details. aotisSfAf (2024). _showtext: Using Fonts More Easily in R Graphs_. R package version 0.9-7,
  <https://CRAN.R-project.org/package=showtext>.
8. __ggridges__: Wilke C (2024). _ggridges: Ridgeline Plots in 'ggplot2'_. R package version 0.5.6, <https://CRAN.R-project.org/package=ggridges>.


<script src="https://utteranc.es/client.js"
        repo="arinbaruah/Rinsights_blog"
        issue-term="url"
        theme="github-light"
        crossorigin="anonymous"
        async>
</script>
