---
title: "Detecting a possible event of bank churn using machine learning classification models üí∏üè¶"
author: "Arindam Baruah"
date: "2024-01-18"
categories: [R,analysis,exploratory data analysis,visualisation,statistics,machine learning,classification model]
image: "figure/fig1.png"
number-sections: true
toc: true
execute: 
  echo: false
  warning: false
  message: false
---
![Source: Medium](figure/fig1.png)

# What is a bank churn and why does it occur ? {#sec-intro}

With the advent of digital banking, it has become extremely convenient for users to open a new bank account. As opposed to the age old tradition of submitting multiple documents and credit histories after visiting a bank, the process has been revamped by a great deal with an user needing less than 10 minutes to open an account in the comfort of their couches.

However, with digital banking, it has also become convenient for users to close a bank account, more commonly termed as a **"churn"**. While this may appear to be a win for consumers, it is however important to understand the reasons and the effects that entail from a bank churn.

::: {.callout-note}
# Reasons for a churn to occur
A bank account churn could occur for a multitiude of reasons which are important for banks to analyse to reduce attrition of customers and also remain competitive in the market. Some of the reasons are:

-   **Fees and Charges:** High fees or unexpected charges can prompt customers to switch banks. This may include monthly maintenance fees, ATM fees, overdraft fees, and other charges.
-   **Low Interest Rates:** If a bank offers low interest rates on savings accounts or certificates of deposit, customers might look for better opportunities elsewhere to maximize their returns.
-   **Poor Customer Service:** Inadequate customer service, long wait times, and unhelpful staff can lead to frustration and dissatisfaction, prompting customers to seek better service elsewhere.
-   **Branch Accessibility:** Limited access to physical branches or ATMs can be a significant factor. If a customer moves to an area where their current bank has limited presence, they might switch to a more accessible option.
-   **Technology and Online Services:** Customers may switch to a bank that provides better online and mobile banking services, as technology plays an increasingly crucial role in the banking experience.
-   **Incentives and Promotions:** Banks often attract new customers by offering promotions, bonuses, or better interest rates. Existing customers may churn to take advantage of these offers.
-   **Changes in Financial Needs:** As individuals' financial situations evolve, their banking needs may change. For example, a customer might require more advanced financial products, and if their current bank can't meet those needs, they may switch to a different institution.
-   **Mergers and Acquisitions:** Changes resulting from bank mergers or acquisitions, such as alterations in account terms, fees, or service quality, can drive customers to seek alternatives.
-   **Ethical or Social Reasons:** Some customers may choose to switch banks due to concerns about a bank's ethical practices, social responsibility, or involvement in controversial activities.
-   **Security Concerns:** If a bank experiences a security breach or if customers perceive their accounts to be at risk, they may opt to move their funds to a more secure institution.
-   **Better Financial Products:** Customers may switch banks to access better financial products, such as higher-interest savings accounts, more competitive loan rates, or improved credit card offerings.
-   **Life Events:** Major life events like marriage, divorce, retirement, or the death of a spouse can prompt individuals to reassess their banking relationships and switch to better-suited options.
:::



# Importing the relevant libraries and dataset 
::: panel-tabset
## Packages used

In order to initiate our analysis of the bank account data, we will read all the required libraries and then take a glimpse of how our data looks like.

```{r libraries, echo=TRUE,message=FALSE,warning=FALSE}
#| label: library

library(tidyverse)
library(naniar)
library(bookdown)
library(stringr)
library(stringi)
library(lubridate)
library(DT)
library(forcats)
library(ggthemes)
library(corrplot)
library(mltools)
library(data.table)
library(visdat)
library(janitor)
library(cowplot)
library(caTools)
library(pscl)
library(ROCR)
library(caret)
library(xgboost)
library(randomForest)
library(lightgbm)
library(Matrix)
library(catboost)
library(kableExtra)
library(plotly)
library(ggExtra)
```

## Dataset glimpse

```{r}
#| label: tbl-data
#| tbl-cap: "Bank churn dataset"
df_bank <- read_csv("data/train.csv")

kbl(head(df_bank)) %>% kable_paper(font_size = 9) %>%
  column_spec(14, bold = T, border_right = T) %>%
  column_spec(2, width = "30em", background = "yellow")

```
:::

# Data description

Based on a brief research, the description for each variable in the dataset is as follows:

1. __CustomerId:__ Unique identifier for each customer
2. __Surname:__ Name associated with the customer
3. __CreditScore:__ Credit score of the customer
4. __Geography:__ Location of the bank account based on geographical location of the bank
5. __Gender:__ Gender of the customer
6. __Age:__ Current age of the customer
7. __Tenure:__ Length of time since the opening of the bank account
8. __Balance:__ Current credit balance in the account
9. __NumOfProducts:__ Number of banking services used by the customer
10. __HasCrCard:__ An indicator for whether the customer has a credit card
11. __IsActiveMember:__ Is the customer a regular user of the bank account through transactions
12. __EstimatedSalary:__ Estimated earning declared as salary for the customer
13. __Exited:__ Has the customer closed the bank account

# Data cleaning

```{r}
#| label: fig-misvis
#| fig-cap: "Check for missing values in the dataset"
gg_miss_var(df_bank)
```
As we can observe from @fig-misvis, the dataset is clean and __does not have any missing values to be dealt with.__ While this is ideal, it is however not the only check that we must perform in the data.

# Data sanity checks
::: panel-tabset

## CustomerId


```{r}
#| label: tbl-occur
#| tbl-cap: "Number of occurrences of each customer"
df_bank %>% group_by(CustomerId) %>% summarise(Total_occurrences = n()) %>% arrange(-Total_occurrences) %>% head() %>% kbl()
```
Based on @tbl-occur, we can observe that the same customer ID appears multiple number of times in the dataset when infact, it was supposed to appear just once. Hence, we can consider the CustomerId variable to be serving no purpose in the current dataset. This shall be dropped in the feature selection section.


## Estimated Salary

The estimated salary variable indicates the income of each customer declared as a salary. __Salaries can never be negative.__ Let us quickly check if that indeed is the case.

```{r}
#| label: fig-salary
#| fig-cap: "Salary distribution of customers"
pl1 <- ggplot(data = df_bank,aes(x = EstimatedSalary)) + geom_histogram(alpha = 0.6,color = "orange") + theme_economist() + 
  labs(x = "Estimated annual salary ($)", y = "Number of customers",
       caption = "Visual by Arindam Baruah",title = "Annual salary distribution") + theme(plot.title = element_text(hjust = 0.5),
                                                                                          panel.background = element_rect(fill = "cornsilk")) 
pl1
```
Based on the histrogram of the salaries as illustrated by @fig-salary, we can observe that the salaries are __indeed positive which is what is expected.__

## Age

Bank account customers are generally required to be adults (> 18 years). We will check if that holds true for the current dataset and attempt to detect any anomalous data such as negative age.

```{r}
#| label: fig-age
#| fig-cap: "Age distribution of the bank customers"
pl2 <- ggplot(data = df_bank,aes(y = Age)) + geom_boxplot() + theme_economist() + 
  labs(y = "Age of customers (in years)",
       caption = "Visual by Arindam Baruah",title = "Age distribution") + theme(plot.title = element_text(hjust = 0.5),
                                                                                          panel.background = element_rect(fill = "cornsilk"),
                                                                                axis.text.x = element_blank(),axis.ticks.x = element_blank()) 
pl2
```
Based on @fig-age, we can observe that the data indeed suggests that the customers are of the right age (>18 years) and there are no anomalous data entries for this variable.


:::

# Exploratory Data Analysis

Before we create a prediction model, we need to understand how are our variables correlated to one another. This will be done through various visualisations as follows:


## Correlation plot


```{r corrplot}
#| label: fig-corrplot
#| fig-cap: "Correlation plot"


nom_features <- c("id","CustomerId","Surname")
df_bank_num <- df_bank %>% select(-nom_features)

df_bank_num$Gender <- as.factor(df_bank_num$Gender)
df_bank_num$Geography <- as.factor(df_bank_num$Geography)
dt_bank_num <- data.table(df_bank_num)
df_bank_num <- as.data.frame(one_hot(dt_bank_num,cols = c("Gender","Geography")))


corrplot(cor(df_bank_num),        # Correlation matrix
         method = "number", # Correlation plot method
         type = "full",    # Correlation plot style (also "upper" and "lower")
         diag = TRUE,      # If TRUE (default), adds the diagonal
         tl.col = "black", # Labels color
         bg = "white",     # Background color
         title = "Correlation plot",       # Main title
         col = NULL,
         number.cex = 0.5,
         tl.cex = .5,
         )

```
:::{.callout-note}
# Key takeaway
Based on our understanding of the variables as illustrated by the correlation plot in @fig-corrplot, we can infer that there is __no single variable which is highly correlated__ to the churn indicator. __We can also observe that none of the features are highly correlated to one another. This indicates that there is no multicollinearity in the choice of our features.__
:::

## Geography wise churn

Let us try to understand if there are any geographical regions which have accounted for high churns.

```{r}
#| label: fig-geo
#| fig-cap: "Bank accounts for each geographical location"
df_geo <- df_bank %>% group_by(Geography,Exited) %>% summarise(Total_churns = n())

df_geo$Exited <- as.factor(df_geo$Exited)

df_geo$Exited <- case_match(df_geo$Exited,"0"~"Active","1"~"Churn")

df_geo <- df_geo %>%
  mutate(Percentage = Total_churns / sum(Total_churns) * 100)


pl2 <- ggplot(data = df_geo,aes(x = Geography,y = Total_churns,
                                fill = Exited)) + geom_col(position = "fill",color="black") + theme_classic() + labs(fill = "Bank account status",
                                                                                                                     caption = "Visual by Arindam Baruah",
                                                                                                                     title = "Bank account churn based on geographical location",x = "Geographical location",y = "Proportion of bank accounts") + theme(plot.title = element_text(hjust = 0.5)) +
geom_text(
    aes(label = paste0(round(Percentage,1),"%")),
    position = position_fill(vjust = 0.5),  # Adjust the position as needed
    color = "black"
  ) + scale_fill_manual(values= c("blue","red"))

pl2
```

Based on the illustration @fig-geo, we can observe that the percentage of churns are significantly higher in Germany as compared to France and Spain where the churn percentage appears to be similar.

:::{.callout-note}
# Key takeaway

The higher churn % for Germany could indicate issues pertaining to the economy of the country or factors such as loan interest rate in the country. It could also indicate that the banking services or customer services in Germany might be lacking as compared to the other countries which have resulted in the higher churn percentage. Diving deeper into the banking practices of Germany would provide a better understanding as to the reason for the high attrition of customers.
:::

## Age wise bank churn


```{r}
#| label: fig-age-churn
#| fig-cap: "Age wise churn data"
df_bank$Exited <- case_match(df_bank$Exited,0~"Active",1~"Churn")
pl3 <- ggplot(data = df_bank,aes(x = Age,fill = as.factor(Exited))) + geom_histogram(alpha=0.5,color = "black",
                                                                                     position = "identity") + scale_fill_manual(values = c("blue","red")) +
  labs(x = "Age of customer (years)",y = "Number of customers",fill = "Bank account status",caption = "Visual by Arindam Baruah") + theme_economist() + theme(panel.background = element_rect(fill = "cornsilk"))

pl3
```

As we can observe through @fig-age-churn, the churns are associated majorly with customers between the ages of 25 and 60.

:::{.callout-note}
# Key takeaway

The data indicates that after a couple of years since opening a new bank account, customers are observed to close their accounts which could be due to numerous reasons such as:

1. Better customer services from other banks 
2. Low credit score or due to financial bankruptcy of the customer
3. High loan interests charged by the bank which may have led the customer to switch to another bank after fulfilling the loan.
:::

## Credit score wise churn

Let us now try to analyse if the credit scores could tell us anything about the likelihood of the bank account churns.

```{r}
#| label: fig-cred
#| fig-cap: "Credit score distribution of churned accounts"
pl4 <- ggplot(data = df_bank, aes(x = CreditScore,fill = Exited)) + geom_density(alpha =0.7) + theme_classic() + labs(x= "Credit score of customer",
                                                                                                                      y = "Probability density",
                                                                                                                      fill = "Bank account status",
                                                                                                                      caption = "Visual by Arindam Baruah") +
  scale_fill_manual(values = c("blue","red"))
pl4
```

:::{.callout-note}
# Key takeaway

Based on the credit score distribution of the churned and active accounts as illustrated in @fig-cred, we __cannot observe any discernible difference in the credit scores which could indicate the likeliness of a bank account churn__. This indicates that the credit scores of customers may not be a strong factor leading to them closing their bank accounts.
:::

## Transaction activity wise churn 

Next, we can analyse if the churns are mostly from bank accounts which are inactive, possibly due to very low transactions.

```{r}
#| label: fig-transact
#| fig-cap: "Transaction activity wise churn"

df_active <- df_bank %>% group_by(IsActiveMember,Exited) %>% summarise(Total_churns = n())

df_active <- df_active %>%
  mutate(Percentage = Total_churns / sum(Total_churns) * 100)

x_labels <- c("Inactive","Active")
pl5 <- ggplot(data = df_active,aes(x = as.factor(IsActiveMember),y = Total_churns,
                                fill = Exited)) + geom_col(position = "fill",color="black",alpha=0.8) + theme_classic() + labs(fill = "Bank account status",
                                                                                                                     caption = "Visual by Arindam Baruah",
                                                                                                                     title = "Bank account churn based on account activity",x = "Transactional acitvity",y = "Proportion of bank accounts") + theme(plot.title = element_text(hjust = 0.5)) +
geom_text(
    aes(label = paste0(round(Percentage,1),"%")),
    position = position_fill(vjust = 0.5),  # Adjust the position as needed
    color = "black"
  ) + scale_fill_manual(values = c("blue","red")) + scale_x_discrete(labels = x_labels,breaks = c(0,1)) + coord_flip()

pl5
```

:::{.callout-note}
# Key takeaway

Based on @fig-transact, we can observe that the percentage of the __bank churns for inactive accounts are more than twice that of the active accounts.__

This indicates that the probability of a churn rises if the transaction activity of the bank account reduces. This could also be measure taken by the bank to reduce the burden of keeping the services activated for accounts which have shown little to no activity for an extended period of duraiton.

:::

## Balance wise churn

Let us try to analyse if the account balance can indicate whether a churn might take place. 

For this, we will flag any balance which is 0.

```{r}
#| label: fig-balance
#| fig-cap: "Account balance wise churn"
df_bank_balance <- df_bank %>% mutate(NilBalance = case_match(Balance, 0~ "Zero balance",
                                                              .default = "Positive balance"))
df_zero_churn <- df_bank_balance %>% group_by(NilBalance,Exited) %>% summarise(Total = n()) %>% mutate(Percentage = Total / sum(Total) * 100)

pl6 <- ggplot(data = df_zero_churn,aes(x = NilBalance,y = Total,
                                fill = Exited)) + geom_col(position = "fill",color="black",alpha=0.8) + theme_classic() + labs(fill = "Bank account status",
                                                                                                                     caption = "Visual by Arindam Baruah",
                                                                                                                     title = "Bank account churn based on account balance",x = "Account balance",y = "Proportion of bank accounts") + theme(plot.title = element_text(hjust = 0.5)) +
geom_text(
    aes(label = paste0(round(Percentage,1),"%")),
    position = position_fill(vjust = 0.5),  # Adjust the position as needed
    color = "black"
  ) + scale_fill_manual(values = c("blue","red"))  + coord_flip()

pl6
```
:::{.callout-note}
# Key takeaway

@fig-balance illustrates the percentage of bank accounts churned for accounts with positive balance and zero balance. Contrary to belief, the percentage of churns are actually higher for accounts with positive balance as compared to zero balance accounts. 

This could be due to the fact that account holders with zero balances are generally inactive and may not proactively close their accounts but rather, is done so by the bank to reduce the maintenance cost of keeping zero balance accounts active. However, account holders with positive balance may proactively choose to close their accounts due to various reasons as stated in @sec-intro which may lead to the higher percentage of churned accounts.
:::


# Model creation
::: panel-tabset
Now that we have analysed the variables, visualised them and cleaned the data into a machine readable form, we will now be working on a predictive model to be able to accurately predict whether the bank account details of a customer can help indicate if a bank account churn might occur.

Let us create our train and test datasets as follows:

```{r echo=TRUE}
set.seed(101)
sample =  sample.split(df_bank_num$Exited,SplitRatio = 0.7)
train = subset(df_bank_num,sample == T)
test = subset(df_bank_num,sample == F)
```

Here, we have allocated 70% of the dataset as the training dataset which will be used to train our machine learning model while the remaining 30% of the dataset will be allocated as a test dataset which will allow us to understand the accuracy of our classification model.

## Logistic Regression

Here, we will fit the logistic regression model to the train data as follows.
```{r logit,echo=TRUE}
model_logit <- glm(Exited~.,family=binomial(link='logit'),data=train)
```



```{r}
fitted.results <- predict(model_logit,newdata=subset(test,select=-(Exited)),type='response')
fitted.results <- ifelse(fitted.results > 0.5,1,0)

```

Let us study the performance of the logistic regression model through the Receiver Operating Curve (ROC) metric.


```{r roc-logit, fig.cap="Receiver Operating Curve for Logistic Regression",fig.align='center'}
#| label: fig-roclog
#| fig-cap: "ROC-AUC metric"
p <- as.numeric(predict(model_logit, newdata=subset(test,select=-c(Exited)), type="response"))
pr <- prediction(p, test$Exited)
prf <- performance(pr, measure = "tpr", x.measure = "fpr")
plot(prf)
auc_logit <- performance(pr, measure = "auc")
auc_logit <- auc_logit@y.values[[1]]
title("Receiver Operating Curve for Logistic Regression")

```
Based on the receiver operating curve as illustrated by @fig-roclog, we can observe that while a sizeable are of the graph is covered by the curve, it can however by improved by possibly a better classification algorithm.

```{r conf-mat-viz}
draw_confusion_matrix <- function(cm) {

  layout(matrix(c(1,1,2)))
  par(mar=c(2,2,2,2))
  plot(c(100, 345), c(300, 450), type = "n", xlab="", ylab="", xaxt='n', yaxt='n')
  title('CONFUSION MATRIX', cex.main=2)

  # create the matrix 
  rect(150, 430, 240, 370, col='#3F97D0')
  text(195, 435, 'False', cex=1.2)
  rect(250, 430, 340, 370, col='#F7AD50')
  text(295, 435, 'True', cex=1.2)
  text(125, 370, 'Predicted', cex=1.3, srt=90, font=2)
  text(245, 450, 'Actual', cex=1.3, font=2)
  rect(150, 305, 240, 365, col='#F7AD50')
  rect(250, 305, 340, 365, col='#3F97D0')
  text(140, 400, 'False', cex=1.2, srt=90)
  text(140, 335, 'True', cex=1.2, srt=90)

  # add in the cm results 
  res <- as.numeric(cm$table)
  text(195, 400, res[1], cex=1.6, font=2, col='white')
  text(195, 335, res[2], cex=1.6, font=2, col='white')
  text(295, 400, res[3], cex=1.6, font=2, col='white')
  text(295, 335, res[4], cex=1.6, font=2, col='white')

  # add in the specifics 
  plot(c(100, 0), c(100, 0), type = "n", xlab="", ylab="", main = "DETAILS", xaxt='n', yaxt='n')
  text(10, 85, names(cm$byClass[1]), cex=1.2, font=2)
  text(10, 70, round(as.numeric(cm$byClass[1]), 3), cex=1.2)
  text(30, 85, names(cm$byClass[2]), cex=1.2, font=2)
  text(30, 70, round(as.numeric(cm$byClass[2]), 3), cex=1.2)
  text(50, 85, names(cm$byClass[5]), cex=1.2, font=2)
  text(50, 70, round(as.numeric(cm$byClass[5]), 3), cex=1.2)
  text(70, 85, names(cm$byClass[6]), cex=1.2, font=2)
  text(70, 70, round(as.numeric(cm$byClass[6]), 3), cex=1.2)
  text(90, 85, names(cm$byClass[7]), cex=1.2, font=2)
  text(90, 70, round(as.numeric(cm$byClass[7]), 3), cex=1.2)

  # add in the accuracy information 
  text(30, 35, names(cm$overall[1]), cex=1.5, font=2)
  text(30, 20, round(as.numeric(cm$overall[1]), 3), cex=1.4)
  text(70, 35, names(cm$overall[2]), cex=1.5, font=2)
  text(70, 20, round(as.numeric(cm$overall[2]), 3), cex=1.4)
}  
```



```{r conf-mat, fig.cap="Confusion matrix for Logistic Regression",fig.align='center'}
#| label: fig-conflog
#| fig-cap: "Confusion matrix for Logistic Regression classification model"
cm_logit <- confusionMatrix(factor(fitted.results),factor(test$Exited))
draw_confusion_matrix(cm_logit)
```

@fig-conflog depicts a more intuitive way to understand the performance of the Logistic Regression. The model was able to predict the churned accounts with an __accuracy of 83.4%__. 

## XGboost classifier


Let us try to use an extra gradient boosted ensemble method commonly termed as the XGboost classifier.

```{r}
xgb_model <- xgboost(data = as.matrix(train %>% select(-c(Exited))), label = as.matrix(train$Exited), 
                     max.depth = 2, eta = 1, nthread = 2, nrounds = 2, objective = "binary:logistic")
```


```{r}
pred_xgb <- predict(xgb_model, as.matrix(test %>% select(-c(Exited))))
pred_xgb <- if_else(pred_xgb > 0.5,1,0)
```


```{r conf-mat-xgb,fig.cap="Confusion matrix of the XGBoost model",fig.align='center'}
#| label: fig-confxgb
#| fig-cap: "Confusion matrix for XGBoost classification model"
cm_xgb <- confusionMatrix(factor(pred_xgb),factor(test$Exited))
draw_confusion_matrix(cm_xgb)

```

We observe a marginally __better classification accuracy as compared to the logistic regression model for the XGboosted classifier as depicted by @fig-confxgb with an accuracy of 85.1%.__



## Light GBM

Let us utilise the LGBM algorithm and train it on the given dataset.

```{r include=FALSE,echo=TRUE}

params = list(max_bin = 8,
               learning_rate = 0.001,
               objective = "binary",
               metric = 'binary_logloss')

trainm = sparse.model.matrix(Exited~., data = train )
train_label = train[,"Exited"]

train_matrix = lgb.Dataset(data = as.matrix(trainm), label = train_label)

model_lgb = lightgbm(params = params, train_matrix, nrounds = 2000)
```




```{r fig.align='center'}
#| label: fig-lgbconf
#| fig-cap: "Confusion matrix for Light GBM classification model"
pred_lgb = predict(model_lgb, as.matrix(test))
pred_lgb <- if_else(pred_lgb > 0.6,1,0)
cm_lgb <- confusionMatrix(factor(pred_lgb),factor(test$Exited))
draw_confusion_matrix(cm_lgb)
```
Based on @fig-lgbconf, we can observe that the LGB classifier has actually classified poorly with multiple negatives observed in its classification. We can disregard this model for our purpose of classification.

## Catboost classifier


```{r include=FALSE}
fit_control <- caret::trainControl(
  method = "cv", 
  number = 3, 
  search = "random",
  classProbs = TRUE
)
# set grid options
grid <- expand.grid(
  depth = c(4, 6, 8),
  learning_rate = 0.1,
  l2_leaf_reg = 0.1,
  rsm = 0.95,
  border_count = 64,
  iterations = 10
)

#x <- data[,!(names(data) %in% drop_columns)]
#y <- data[,c("Survived")]

x<- train %>% select(-c(Exited))
y <- train$Exited

# train catboost
model_cat <- caret::train(
  x = x, 
  y = as.factor(make.names(y)),
  method = catboost.caret,
  metric = "Accuracy",
  maximize = TRUE,
  preProc = NULL,
  tuneGrid = grid, 
  tuneLength = 30, 
  trControl = fit_control
)
```


```{r catb,fig.cap="Feature importance using Catboost model",fig.align='center'}
#| label: fig-catimp
#| fig-cap: "Importance of each variable based on the Catboost classification algorithm"
importance <- varImp(model_cat, scale = FALSE)
plot(importance)
```

```{r cf-cat,fig.cap="Confusion matrix of the Catboost model",fig.align='center'}
#| label: fig-catconf
#| fig-cap: "Confusion matrix for Catboost classification model"
pred_cat = predict(model_cat, test %>% select(-Exited))
pred_cat <- if_else(pred_cat == "X0",0,1)
cm_cat <- confusionMatrix(factor(pred_cat),factor(test$Exited))
draw_confusion_matrix(cm_cat)
```

Upon utilising the Catboost classifier, we can observe from @fig-catconf that the classifier __has a marginally better accuracy when compared to the logistic regression, XGboost and Light GBM.__

Additionally, @fig-catimp indicates the variables which have the highest importance in predicting the bank account churns. We can observe that the variables, "Number of products" followed by "Age" and "Activity" are the most critical to be able to predict tge churned accounts. 

:::

```{r }

df_test <- read_csv("data/test.csv")
df_test_id <- df_test$id
df_test <- df_test %>% select(-nom_features)

df_test$Gender <- as.factor(df_test$Gender)
df_test$Geography <- as.factor(df_test$Geography)
dt_test <- data.table(df_test)
df_test <- as.data.frame(one_hot(dt_test,cols = c("Gender","Geography")))

```
```{r}
preds <- predict(xgb_model,as.matrix(df_test))
fitted.results <- as.data.frame(preds)

fitted.results <- fitted.results %>% rename("Exited" = "preds" )
fitted.results$id <- df_test_id
fitted.results <- fitted.results %>% select(c("id","Exited"))

write_csv(fitted.results,"submission.csv")



```


